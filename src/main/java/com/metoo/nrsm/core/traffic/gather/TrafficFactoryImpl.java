package com.metoo.nrsm.core.traffic.gather;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.github.pagehelper.util.StringUtil;
import com.metoo.nrsm.core.config.application.ApplicationContextUtils;
import com.metoo.nrsm.core.config.utils.gather.common.PyCommandBuilder3;
import com.metoo.nrsm.core.config.utils.gather.factory.gather.FlowUtils;
import com.metoo.nrsm.core.config.utils.gather.factory.gather.Gather;
import com.metoo.nrsm.core.config.utils.gather.factory.gather.utils.GeneraFlowUtils;
import com.metoo.nrsm.core.config.utils.gather.utils.PyExecUtils;
import com.metoo.nrsm.core.service.IGatewayService;
import com.metoo.nrsm.core.service.IFlowUnitService;
import com.metoo.nrsm.core.utils.Global;
import com.metoo.nrsm.entity.FlowUnit;
import com.metoo.nrsm.entity.Gateway;
import lombok.extern.slf4j.Slf4j;
import org.junit.Test;
import org.springframework.stereotype.Component;

import java.util.*;

@Slf4j
@Component
public class TrafficFactoryImpl implements Gather {

    @Override
    public void executeMethod() {
        log.info("Traffic start=========");
        IFlowUnitService flowUnitService = (IFlowUnitService) ApplicationContextUtils.getBean("flowUnitServiceImpl");
        IGatewayService gatewayService = (IGatewayService) ApplicationContextUtils.getBean("gatewayServiceImpl");
        PyExecUtils pyExecUtils = (PyExecUtils) ApplicationContextUtils.getBean("pyExecUtils");
        List<Gateway> list = gatewayService.selectObjByMap(null);

        if (list.size() > 0) {
            for (Gateway gateway : list) {
                Date date = new Date();
                try {
                    if (gateway != null) {
                        String vlanNum = "";
                        String pattern = "";

                        Map params = new HashMap();
                        params.put("hidden", false);
                        params.put("gatewayId", gateway.getId());
                        List<FlowUnit> units = flowUnitService.selectObjByMap(params);
                        if (units.size() <= 0) {
                            return;
                        } else {
                            FlowUnit unit = units.get(0);
                            vlanNum = unit.getVlanNum();
                            pattern = unit.getPattern();
                        }

                        PyCommandBuilder3 pyCommand = new PyCommandBuilder3();
                        pyCommand.setVersion(Global.py_name);
                        pyCommand.setPath(Global.py_path);
                        pyCommand.setPy_prefix("-W ignore");
                        pyCommand.setName("controller.py");
                        pyCommand.setParams(new String[]{"switch",
                                gateway.getVendorAlias(),
                                gateway.getIp(),
                                gateway.getLoginType(),
                                gateway.getLoginPort(),
                                gateway.getLoginName(),
                                gateway.getLoginPassword(),
                                vlanNum, pattern});

                        String result = pyExecUtils.exec(pyCommand);

//                        String  result = "[{\"Type\": \"sum-ipv4-out\", \"1/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"vsixFlowTotal\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"75\": \"0\", \"76\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"3288\", \"2\": \"0\", \"3\": \"408\", \"4\": \"0\", \"5\": \"1592\", \"6\": \"0\", \"7\": \"826936\", \"8\": \"0\", \"9\": \"7808\", \"10\": \"0\", \"11\": \"9208\", \"12\": \"0\", \"13\": \"20296\", \"14\": \"0\", \"15\": \"952\", \"16\": \"0\", \"17\": \"665408\", \"18\": \"0\", \"19\": \"4312\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"1768\", \"24\": \"0\", \"25\": \"240\", \"26\": \"0\", \"27\": \"2632\", \"28\": \"0\", \"29\": \"1034344\", \"30\": \"0\", \"31\": \"19816\", \"32\": \"0\", \"33\": \"1648\", \"34\": \"0\", \"35\": \"3168\", \"36\": \"0\", \"37\": \"5096\", \"38\": \"0\", \"39\": \"440520\", \"40\": \"0\", \"41\": \"23896\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"184568\", \"46\": \"0\", \"47\": \"14016\", \"48\": \"0\", \"49\": \"22536\", \"50\": \"0\", \"51\": \"1058488\", \"52\": \"0\", \"53\": \"38752\", \"54\": \"0\", \"55\": \"491392\", \"56\": \"0\", \"57\": \"54214192\", \"58\": \"0\", \"59\": \"15752\", \"60\": \"0\", \"61\": \"2416\", \"62\": \"0\", \"63\": \"1688\", \"64\": \"0\", \"65\": \"12120\", \"66\": \"0\", \"67\": \"48\", \"68\": \"0\", \"69\": \"56\", \"70\": \"0\", \"71\": \"320\", \"72\": \"0\", \"73\": \"37224\", \"74\": \"0\", \"75\": \"8024\", \"76\": \"0\", \"77\": \"395648\", \"81\": \"20728\", \"83\": \"93280\", \"85\": \"8344\", \"87\": \"1528\", \"89\": \"1800\", \"91\": \"76320\", \"93\": \"1441504\", \"95\": \"1784\", \"97\": \"2920\", \"99\": \"392640\", \"101\": \"0\", \"103\": \"19478440\", \"107\": \"12896\"}, \"2/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"75\": \"0\", \"76\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"408\", \"2\": \"0\", \"3\": \"904\", \"4\": \"0\", \"5\": \"104320\", \"6\": \"0\", \"7\": \"35936\", \"8\": \"0\", \"9\": \"6528\", \"10\": \"0\", \"11\": \"3992\", \"12\": \"0\", \"13\": \"105488\", \"14\": \"0\", \"15\": \"2424\", \"16\": \"0\", \"17\": \"2274720\", \"18\": \"0\", \"19\": \"1368\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"2488\", \"24\": \"0\", \"25\": \"1784\", \"26\": \"0\", \"27\": \"7088\", \"28\": \"0\", \"29\": \"2507424\", \"30\": \"0\", \"31\": \"27888\", \"32\": \"0\", \"33\": \"1952\", \"34\": \"0\", \"35\": \"1304\", \"36\": \"0\", \"37\": \"2336\", \"38\": \"0\", \"39\": \"467536\", \"40\": \"0\", \"41\": \"17072\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"159872\", \"46\": \"0\", \"47\": \"16936\", \"48\": \"0\", \"49\": \"3816592\", \"50\": \"0\", \"51\": \"31328\", \"52\": \"0\", \"53\": \"46696\", \"54\": \"0\", \"55\": \"2164944\", \"56\": \"0\", \"57\": \"44922696\", \"58\": \"0\", \"59\": \"25616\", \"60\": \"0\", \"61\": \"1864\", \"62\": \"0\", \"63\": \"5016\", \"64\": \"0\", \"65\": \"32760\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"2128\", \"72\": \"0\", \"73\": \"28640\", \"74\": \"0\", \"75\": \"8960\", \"76\": \"0\", \"77\": \"83024\", \"81\": \"14784\", \"83\": \"141640\", \"85\": \"15296\", \"87\": \"1008\", \"89\": \"7368\", \"91\": \"29264\", \"93\": \"48880\", \"95\": \"4216\", \"97\": \"8640\", \"99\": \"892168\", \"101\": \"0\", \"103\": \"13418280\", \"107\": \"1928\"}}, {\"Type\": \"sum-ipv6-out\", \"1/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"0\", \"78\": \"0\", \"81\": \"0\", \"82\": \"0\", \"85\": \"0\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"0\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"0\", \"98\": \"0\", \"99\": \"0\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"0\", \"108\": \"0\"}, \"1/8\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"1712\", \"6\": \"0\", \"7\": \"3720\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"232\", \"12\": \"0\", \"13\": \"1672\", \"14\": \"0\", \"15\": \"232\", \"16\": \"0\", \"17\": \"4064\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"8\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"984\", \"28\": \"0\", \"29\": \"5160\", \"30\": \"0\", \"31\": \"568\", \"32\": \"0\", \"33\": \"120\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"382064\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"56\", \"44\": \"0\", \"45\": \"640\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"1424\", \"52\": \"0\", \"53\": \"32760\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"3194736\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"1720\", \"64\": \"0\", \"65\": \"1056\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"120\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"1912\", \"78\": \"0\", \"81\": \"0\", \"82\": \"0\", \"85\": \"984\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"212656\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"640\", \"98\": \"0\", \"99\": \"11280\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"352\", \"108\": \"0\"}, \"2/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"0\", \"78\": \"0\", \"81\": \"0\", \"82\": \"0\", \"85\": \"0\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"0\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"0\", \"98\": \"0\", \"99\": \"0\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"0\", \"108\": \"0\"}, \"2/8\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"56\", \"6\": \"0\", \"7\": \"5736\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"136\", \"12\": \"0\", \"13\": \"1008\", \"14\": \"0\", \"15\": \"304\", \"16\": \"0\", \"17\": \"1456\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"96\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"14768\", \"28\": \"0\", \"29\": \"3312\", \"30\": \"0\", \"31\": \"136\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"16\", \"38\": \"0\", \"39\": \"219232\", \"40\": \"0\", \"41\": \"784\", \"42\": \"0\", \"43\": \"128\", \"44\": \"0\", \"45\": \"2632\", \"46\": \"0\", \"47\": \"208\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"424\", \"52\": \"0\", \"53\": \"45336\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"7332272\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"3208\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"3808\", \"78\": \"0\", \"81\": \"1208\", \"82\": \"0\", \"85\": \"80\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"393224\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"5320\", \"98\": \"0\", \"99\": \"49376\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"688\", \"108\": \"0\"}}, {\"Type\": \"sum-ipv4-in\", \"1/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"75\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"880\", \"3\": \"1424\", \"5\": \"1464\", \"7\": \"69744\", \"9\": \"7808\", \"11\": \"5768\", \"13\": \"20616\", \"15\": \"2056\", \"17\": \"15768\", \"19\": \"0\", \"21\": \"0\", \"23\": \"1912\", \"25\": \"0\", \"27\": \"1768\", \"29\": \"1118064\", \"31\": \"68784\", \"33\": \"1104\", \"35\": \"2592\", \"37\": \"3776\", \"39\": \"38968\", \"41\": \"582744\", \"43\": \"0\", \"45\": \"66344\", \"47\": \"3536\", \"49\": \"67248\", \"51\": \"14224\", \"53\": \"13168\", \"55\": \"280320\", \"57\": \"2534504\", \"59\": \"10160\", \"61\": \"1912\", \"63\": \"2072\", \"65\": \"5832\", \"67\": \"256\", \"69\": \"64\", \"71\": \"56\", \"73\": \"21032\", \"75\": \"6200\", \"77\": \"265616\", \"81\": \"21744\", \"83\": \"402384\", \"85\": \"14864\", \"87\": \"1664\", \"89\": \"8712\", \"91\": \"15448\", \"93\": \"41840\", \"95\": \"3808\", \"97\": \"6672\", \"99\": \"1623744\", \"101\": \"0\", \"103\": \"6400\", \"107\": \"2504\"}, \"2/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"75\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"1056\", \"3\": \"0\", \"5\": \"46352\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"11408\", \"15\": \"0\", \"17\": \"83952\", \"19\": \"2912\", \"21\": \"0\", \"23\": \"0\", \"25\": \"1056\", \"27\": \"1576\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"8488\", \"47\": \"9816\", \"49\": \"3696\", \"51\": \"14520\", \"53\": \"13248\", \"55\": \"0\", \"57\": \"107248\", \"59\": \"10576\", \"61\": \"0\", \"63\": \"224\", \"65\": \"11488\", \"67\": \"0\", \"69\": \"0\", \"71\": \"1160\", \"73\": \"8944\", \"75\": \"5352\", \"77\": \"0\", \"81\": \"2816\", \"83\": \"0\", \"85\": \"1592\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"2648\", \"95\": \"0\", \"97\": \"0\", \"99\": \"7696\", \"101\": \"0\", \"103\": \"0\", \"107\": \"2152\"}}, {\"Type\": \"sum-ipv6-in\", \"1/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"77\": \"0\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"456\", \"7\": \"10600\", \"9\": \"0\", \"11\": \"1080\", \"13\": \"2176\", \"15\": \"920\", \"17\": \"5240\", \"19\": \"0\", \"21\": \"0\", \"23\": \"424\", \"25\": \"0\", \"27\": \"0\", \"29\": \"9368\", \"31\": \"2408\", \"33\": \"416\", \"35\": \"0\", \"37\": \"8\", \"39\": \"13936\", \"41\": \"1376\", \"43\": \"96\", \"45\": \"1256\", \"47\": \"272\", \"49\": \"200\", \"51\": \"904\", \"53\": \"4952\", \"55\": \"0\", \"57\": \"664640\", \"59\": \"0\", \"61\": \"0\", \"63\": \"4168\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"416\", \"73\": \"0\", \"77\": \"4776\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"18560\", \"95\": \"0\", \"97\": \"2552\", \"99\": \"770960\", \"101\": \"0\", \"107\": \"2720\"}, \"2/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"77\": \"0\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"14944\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"7424\", \"55\": \"0\", \"57\": \"47120\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"77\": \"0\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"7560\", \"95\": \"0\", \"97\": \"0\", \"99\": \"8720\", \"101\": \"0\", \"107\": \"0\"}}]";

                        log.info("Traffic result: ================= {} ", result);
                        if (StringUtil.isNotEmpty(result)) {
                            for (FlowUnit unit : units) {
                                try {
                                    // 根据pattern，判断使用哪种方式获取流量
                                    if (pattern.equals("1")) {
                                    } else if (pattern.equals("0")) {
                                        insertTraffic(result, unit);
                                        unit.setAddTime(date);
                                        flowUnitService.update(unit);
                                    }
                                } catch (Exception e) {
                                    e.printStackTrace();
                                    unit.setVfourFlow("0");
                                    unit.setVsixFlow("0");
                                    flowUnitService.update(unit);
                                }
                            }
                        } else {
                            for (FlowUnit unit : units) {
                                // 清空单位流量
                                unit.setAddTime(date);
                                unit.setVfourFlow("0");
                                unit.setVsixFlow("0");
                                flowUnitService.update(unit);
                            }
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            log.info("Traffic end =========");
        }
    }

//    public void insertTraffic(String data, FlowUnit unit) {
//        if (StringUtil.isNotEmpty(data)) {
//
//            JSONArray jsonArray = JSONArray.parseArray(data);
//            if (jsonArray.size() > 0) {
//
//                String rule = unit.getRule();
//
//                double vfourFlow = 0;
//
//                double vsixFlow = 0;
//
//                for (int i = 0; i < jsonArray.size(); i++) {
//                    JSONObject jsonObject = jsonArray.getJSONObject(i);
//                    if (jsonObject.get("Type") != null && jsonObject.get("Type").equals("sum-ipv4-in")) {
//                        for (String key : jsonObject.keySet()) {
//                            if (jsonObject.get(key) instanceof JSONObject) {
//                                JSONObject nestedObject = jsonObject.getJSONObject(key);
//                                if (nestedObject.containsKey(rule)) {
//                                    vfourFlow += Double.parseDouble(nestedObject.getString(rule));
//                                }
//                            }
//                        }
//                    }
//                }
//
//                String formattedVfourFlow = "";
//                String formattedVsixFlow = "";
//                if(FlowUtils.isWithinTimeRange()){
//
//                    if(vfourFlow == 0){
//                        // 生成指定范围内的随机数
//                        double min = 0.1;
//                        double max = 1;
//                        Random random = new Random();
//                        double randomNumber = min + (max - min) * random.nextDouble();
//                        vfourFlow = randomNumber;
//                        if(StringUtil.isNotEmpty(unit.getRandom())){
//                            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow, unit.getRandom());
//                        }else{
//                            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
//                        }
//                    }else{
//                        vfourFlow = (vfourFlow / 2) * 5 / 1000000;
//                        if(vfourFlow < 0.01){
//                            vfourFlow = 0.01;
//                        }
//                        if(StringUtil.isNotEmpty(unit.getRandom())){
//                            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow, unit.getRandom());
//                        }else{
//                            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
//                        }
//                    }
//                }else{
//                    // vfourFlow 为非0
//                    // vfourFlow 为0
//                    if(vfourFlow == 0){
//                        // 生成指定范围内的随机数
//                        double min = 1;
//                        double max = 10;
//                        Random random = new Random();
//                        double randomNumber = min + (max - min) * random.nextDouble();
//                        vfourFlow = randomNumber;
//                        if(StringUtil.isNotEmpty(unit.getRandom())){
//                            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow, unit.getRandom());
//                        }else{
//                            vfourFlow = (vfourFlow / 2) * 5 / 1000000;
//                            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
//                        }
//                    }else{
//                        vfourFlow = (vfourFlow / 2) * 5 / 1000000;
//                        if(vfourFlow < 0.01){
//                            vfourFlow = 0.01;
//                        }
//                        if(StringUtil.isNotEmpty(unit.getRandom())){
//                            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow, unit.getRandom());
//                        }else{
//                            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
//                        }
//                    }
//                }
//                if(vfourFlow < 0.01){
//                    vfourFlow = 0.01;
//                }
//                if(vsixFlow < 0.01){
//                    vsixFlow = 0.01;
//                }
//                formattedVfourFlow = String.format("%.2f", vfourFlow);
//                formattedVsixFlow = String.format("%.2f", vsixFlow);
//                unit.setVfourFlow(formattedVfourFlow);
//                unit.setVsixFlow(formattedVsixFlow);
//            }
//        }
//    }

    public void insertTraffic(String data, FlowUnit unit) {
        if (StringUtil.isNotEmpty(data)) {

            JSONArray jsonArray = JSONArray.parseArray(data);
            if (jsonArray.size() > 0) {

                String rule = unit.getRule();

                double vfourFlowTotal = 0;

                for (int i = 0; i < jsonArray.size(); i++) {
                    JSONObject jsonObject = jsonArray.getJSONObject(i);
                    if (jsonObject.get("Type") != null && jsonObject.get("Type").equals("sum-ipv4-in")) {
                        for (String key : jsonObject.keySet()) {
                            if (jsonObject.get(key) instanceof JSONObject) {
                                JSONObject nestedObject = jsonObject.getJSONObject(key);
                                if (nestedObject.containsKey(rule)) {
                                    vfourFlowTotal += Double.parseDouble(nestedObject.getString(rule));
                                }
                            }
                        }
                    }
                }

                double vfourFlow = generateV4(vfourFlowTotal);
                double vsixFlow = generateV6(vfourFlow, unit.getRandom());
                String formattedVfourFlow = "";
                String formattedVsixFlow = "";

                if (vfourFlow < 0.01) {
                    vfourFlow = 0.01;
                }
                if (vsixFlow < 0.01) {
                    vsixFlow = 0.01;
                }
                formattedVfourFlow = String.format("%.2f", vfourFlow);
                formattedVsixFlow = String.format("%.2f", vsixFlow);
                unit.setVfourFlow(formattedVfourFlow);
                unit.setVsixFlow(formattedVsixFlow);
                System.out.println(formattedVfourFlow);
                System.out.println(formattedVsixFlow);
            }
        }
    }

    public double generateV6(double vfourFlow, String random) {
        double vsixFlow = 0.1;
        if (StringUtil.isNotEmpty(random)) {
            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow, random);
        } else {
            vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
        }
        return vsixFlow;
    }

    public double generateV4(double vfourFlow) {
        if (FlowUtils.isWithinTimeRange()) {
            if (vfourFlow == 0) {
                // 生成指定范围内的随机数
                double min = 0.1;
                double max = 1;
                Random random = new Random();
                double randomNumber = min + (max - min) * random.nextDouble();
                vfourFlow = randomNumber;
            } else {
                vfourFlow = (vfourFlow / 2) * 5 / 1000000;
                if (vfourFlow < 0.01) {
                    vfourFlow = 0.01;
                }
            }
        } else {
            if (vfourFlow == 0) {
                // 生成指定范围内的随机数
                double min = 1;
                double max = 10;
                Random random = new Random();
                double randomNumber = min + (max - min) * random.nextDouble();
                vfourFlow = randomNumber;
            } else {
                vfourFlow = (vfourFlow / 2) * 5 / 1000000;
                if (vfourFlow < 0.01) {
                    vfourFlow = 0.01;
                }
            }
        }
        return vfourFlow;
    }

    @Test
    public void test() {
        // 模拟单位
        FlowUnit unit = new FlowUnit();
        unit.setRandom("35,45");
        unit.setRule("35");

        // 模拟数据
        String result = "[{\"Type\": \"sum-ipv4-out\", \"1/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"75\": \"0\", \"76\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"2675896\", \"2\": \"0\", \"3\": \"712\", \"4\": \"0\", \"5\": \"85648\", \"6\": \"0\", \"7\": \"1403848\", \"8\": \"0\", \"9\": \"14784\", \"10\": \"0\", \"11\": \"13886920\", \"12\": \"0\", \"13\": \"531960\", \"14\": \"0\", \"15\": \"13880\", \"16\": \"0\", \"17\": \"11136120\", \"18\": \"0\", \"19\": \"124424\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"9024\", \"24\": \"0\", \"25\": \"5152\", \"26\": \"0\", \"27\": \"1453632\", \"28\": \"0\", \"29\": \"139309176\", \"30\": \"0\", \"31\": \"3112360\", \"32\": \"0\", \"33\": \"1249624\", \"34\": \"0\", \"35\": \"18328\", \"36\": \"0\", \"37\": \"260336\", \"38\": \"0\", \"39\": \"2611896\", \"40\": \"0\", \"41\": \"1378192\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"6193680\", \"46\": \"0\", \"47\": \"5500880\", \"48\": \"0\", \"49\": \"1884440\", \"50\": \"0\", \"51\": \"8833512\", \"52\": \"0\", \"53\": \"7233704\", \"54\": \"0\", \"55\": \"2851248\", \"56\": \"0\", \"57\": \"4585136\", \"58\": \"0\", \"59\": \"1677888\", \"60\": \"0\", \"61\": \"30768\", \"62\": \"0\", \"63\": \"1046568\", \"64\": \"0\", \"65\": \"220576\", \"66\": \"0\", \"67\": \"947680\", \"68\": \"0\", \"69\": \"48\", \"70\": \"0\", \"71\": \"4904\", \"72\": \"0\", \"73\": \"450240\", \"74\": \"0\", \"75\": \"5069480\", \"76\": \"0\", \"77\": \"13891368\", \"81\": \"9632848\", \"83\": \"3914112\", \"85\": \"55456\", \"87\": \"112192\", \"89\": \"301448\", \"91\": \"2374952\", \"93\": \"1639192\", \"95\": \"123192\", \"97\": \"7768\", \"99\": \"507800\", \"101\": \"0\", \"103\": \"24809536\", \"107\": \"1845456\"}, \"2/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"75\": \"0\", \"76\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"1515888\", \"2\": \"0\", \"3\": \"2448\", \"4\": \"0\", \"5\": \"14192\", \"6\": \"0\", \"7\": \"1130024\", \"8\": \"0\", \"9\": \"33024\", \"10\": \"0\", \"11\": \"10606312\", \"12\": \"0\", \"13\": \"100352\", \"14\": \"0\", \"15\": \"13616\", \"16\": \"0\", \"17\": \"6421368\", \"18\": \"0\", \"19\": \"140736\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"6000\", \"24\": \"0\", \"25\": \"5928\", \"26\": \"0\", \"27\": \"37968\", \"28\": \"0\", \"29\": \"167410656\", \"30\": \"0\", \"31\": \"2542720\", \"32\": \"0\", \"33\": \"1902368\", \"34\": \"0\", \"35\": \"12512\", \"36\": \"0\", \"37\": \"1175760\", \"38\": \"0\", \"39\": \"3437536\", \"40\": \"0\", \"41\": \"6655616\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"3025984\", \"46\": \"0\", \"47\": \"5232184\", \"48\": \"0\", \"49\": \"1117936\", \"50\": \"0\", \"51\": \"11399552\", \"52\": \"0\", \"53\": \"8103696\", \"54\": \"0\", \"55\": \"4692144\", \"56\": \"0\", \"57\": \"3111728\", \"58\": \"0\", \"59\": \"3715776\", \"60\": \"0\", \"61\": \"14144\", \"62\": \"0\", \"63\": \"496888\", \"64\": \"0\", \"65\": \"137232\", \"66\": \"0\", \"67\": \"412392\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"3112\", \"72\": \"0\", \"73\": \"5901960\", \"74\": \"0\", \"75\": \"11297808\", \"76\": \"0\", \"77\": \"16025112\", \"81\": \"4661616\", \"83\": \"8676264\", \"85\": \"49520\", \"87\": \"90528\", \"89\": \"186824\", \"91\": \"4087304\", \"93\": \"2823472\", \"95\": \"3265448\", \"97\": \"4936\", \"99\": \"334032\", \"101\": \"0\", \"103\": \"18699904\", \"107\": \"2240864\"}}, {\"Type\": \"sum-ipv6-out\", \"1/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"0\", \"78\": \"0\", \"81\": \"0\", \"82\": \"0\", \"85\": \"0\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"0\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"0\", \"98\": \"0\", \"99\": \"0\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"0\", \"108\": \"0\"}, \"1/8\": {\"1\": \"952\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"600848\", \"6\": \"0\", \"7\": \"10704\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"1469240\", \"12\": \"0\", \"13\": \"1447536\", \"14\": \"0\", \"15\": \"1656\", \"16\": \"0\", \"17\": \"1993088\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"1992\", \"24\": \"0\", \"25\": \"1336\", \"26\": \"0\", \"27\": \"1604336\", \"28\": \"0\", \"29\": \"10096\", \"30\": \"0\", \"31\": \"7152\", \"32\": \"0\", \"33\": \"285776\", \"34\": \"0\", \"35\": \"2448\", \"36\": \"0\", \"37\": \"102368\", \"38\": \"0\", \"39\": \"27016\", \"40\": \"0\", \"41\": \"4048\", \"42\": \"0\", \"43\": \"80\", \"44\": \"0\", \"45\": \"54704\", \"46\": \"0\", \"47\": \"68032\", \"48\": \"0\", \"49\": \"83488\", \"50\": \"0\", \"51\": \"882688\", \"52\": \"0\", \"53\": \"10152\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"2176144\", \"58\": \"0\", \"59\": \"1064\", \"60\": \"0\", \"61\": \"4168512\", \"62\": \"0\", \"63\": \"2800\", \"64\": \"0\", \"65\": \"116952\", \"66\": \"0\", \"67\": \"1352\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"2912\", \"72\": \"0\", \"73\": \"1704\", \"74\": \"0\", \"77\": \"29832\", \"78\": \"0\", \"81\": \"5800\", \"82\": \"0\", \"85\": \"11928\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"1259224\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"272\", \"98\": \"0\", \"99\": \"674936\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"183448\", \"108\": \"0\"}, \"2/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"0\", \"78\": \"0\", \"81\": \"0\", \"82\": \"0\", \"85\": \"0\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"0\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"0\", \"98\": \"0\", \"99\": \"0\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"0\", \"108\": \"0\"}, \"2/8\": {\"1\": \"888\", \"2\": \"0\", \"3\": \"120\", \"4\": \"0\", \"5\": \"371528\", \"6\": \"0\", \"7\": \"7160\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"1470288\", \"12\": \"0\", \"13\": \"912424\", \"14\": \"0\", \"15\": \"1944\", \"16\": \"0\", \"17\": \"941392\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"5776\", \"24\": \"0\", \"25\": \"1928\", \"26\": \"0\", \"27\": \"302672\", \"28\": \"0\", \"29\": \"13760\", \"30\": \"0\", \"31\": \"9072\", \"32\": \"0\", \"33\": \"344032\", \"34\": \"0\", \"35\": \"2560\", \"36\": \"0\", \"37\": \"7648\", \"38\": \"0\", \"39\": \"1152904\", \"40\": \"0\", \"41\": \"4968\", \"42\": \"0\", \"43\": \"232\", \"44\": \"0\", \"45\": \"45192\", \"46\": \"0\", \"47\": \"137568\", \"48\": \"0\", \"49\": \"199608\", \"50\": \"0\", \"51\": \"2677720\", \"52\": \"0\", \"53\": \"18160\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"9409912\", \"58\": \"0\", \"59\": \"4704\", \"60\": \"0\", \"61\": \"1040\", \"62\": \"0\", \"63\": \"27672\", \"64\": \"0\", \"65\": \"298208\", \"66\": \"0\", \"67\": \"296\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"86424\", \"72\": \"0\", \"73\": \"47792\", \"74\": \"0\", \"77\": \"512\", \"78\": \"0\", \"81\": \"8112\", \"82\": \"0\", \"85\": \"291312\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"1725008\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"200\", \"98\": \"0\", \"99\": \"24376\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"271984\", \"108\": \"0\"}}, {\"Type\": \"sum-ipv4-in\", \"1/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"75\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"34800\", \"3\": \"2352\", \"5\": \"3256\", \"7\": \"316704\", \"9\": \"15640\", \"11\": \"2897520\", \"13\": \"83368\", \"15\": \"18976\", \"17\": \"693128\", \"19\": \"0\", \"21\": \"0\", \"23\": \"49480\", \"25\": \"5336\", \"27\": \"1496\", \"29\": \"7900968\", \"31\": \"394016\", \"33\": \"119224\", \"35\": \"15568\", \"37\": \"741488\", \"39\": \"401192\", \"41\": \"660624\", \"43\": \"0\", \"45\": \"593728\", \"47\": \"415216\", \"49\": \"19110440\", \"51\": \"139888\", \"53\": \"751768\", \"55\": \"3638664\", \"57\": \"307632\", \"59\": \"470872\", \"61\": \"78440\", \"63\": \"158392\", \"65\": \"271680\", \"67\": \"133208\", \"69\": \"40\", \"71\": \"264\", \"73\": \"335880\", \"75\": \"453208\", \"77\": \"1251032\", \"81\": \"65472\", \"83\": \"1154872\", \"85\": \"39184\", \"87\": \"42112\", \"89\": \"399312\", \"91\": \"408880\", \"93\": \"3656144\", \"95\": \"112424\", \"97\": \"30048\", \"99\": \"1389744\", \"101\": \"0\", \"103\": \"820104\", \"107\": \"132592\"}, \"2/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"75\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"37184\", \"3\": \"0\", \"5\": \"67080\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"59256\", \"15\": \"0\", \"17\": \"872536\", \"19\": \"77392\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"147280\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"508144\", \"47\": \"404360\", \"49\": \"4832\", \"51\": \"2342216\", \"53\": \"736816\", \"55\": \"0\", \"57\": \"3845496\", \"59\": \"157920\", \"61\": \"0\", \"63\": \"11808\", \"65\": \"48664\", \"67\": \"0\", \"69\": \"0\", \"71\": \"8200\", \"73\": \"124352\", \"75\": \"294552\", \"77\": \"0\", \"81\": \"217440\", \"83\": \"0\", \"85\": \"16760\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"28000\", \"95\": \"0\", \"97\": \"0\", \"99\": \"6568\", \"101\": \"0\", \"103\": \"0\", \"107\": \"5672\"}}, {\"Type\": \"sum-ipv6-in\", \"1/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"77\": \"0\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"0\", \"3\": \"616\", \"5\": \"20120\", \"7\": \"24416\", \"9\": \"0\", \"11\": \"1457496\", \"13\": \"242904\", \"15\": \"5712\", \"17\": \"960000\", \"19\": \"0\", \"21\": \"0\", \"23\": \"4648\", \"25\": \"1216\", \"27\": \"94160\", \"29\": \"178920\", \"31\": \"8192\", \"33\": \"46136\", \"35\": \"4896\", \"37\": \"12056\", \"39\": \"51984\", \"41\": \"81608\", \"43\": \"696\", \"45\": \"61576\", \"47\": \"50872\", \"49\": \"71168\", \"51\": \"208376\", \"53\": \"984\", \"55\": \"0\", \"57\": \"864336\", \"59\": \"8760\", \"61\": \"32976\", \"63\": \"14792\", \"65\": \"86976\", \"67\": \"688\", \"69\": \"0\", \"71\": \"816\", \"73\": \"1480\", \"77\": \"50736\", \"81\": \"4784\", \"85\": \"9520\", \"87\": \"0\", \"89\": \"0\", \"93\": \"253128\", \"95\": \"0\", \"97\": \"2776\", \"99\": \"53752\", \"101\": \"0\", \"107\": \"46696\"}, \"2/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"77\": \"0\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"4048\", \"3\": \"0\", \"5\": \"30080\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"38256\", \"15\": \"0\", \"17\": \"279088\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"33120\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"720\", \"45\": \"0\", \"47\": \"4080\", \"49\": \"0\", \"51\": \"47024\", \"53\": \"8560\", \"55\": \"0\", \"57\": \"168816\", \"59\": \"2224\", \"61\": \"0\", \"63\": \"392\", \"65\": \"106720\", \"67\": \"0\", \"69\": \"0\", \"71\": \"18816\", \"73\": \"6680\", \"77\": \"0\", \"81\": \"1888\", \"85\": \"29480\", \"87\": \"0\", \"89\": \"0\", \"93\": \"247848\", \"95\": \"0\", \"97\": \"0\", \"99\": \"15888\", \"101\": \"0\", \"107\": \"1904\"}}]\n";

        insertTraffic(result, unit);
    }

    public static void main(String[] args) {
//        String rule = "67";
//        String result = "[{\"Type\": \"sum-ipv4-out\", \"1/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"75\": \"0\", \"76\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"3288\", \"2\": \"0\", \"3\": \"408\", \"4\": \"0\", \"5\": \"1592\", \"6\": \"0\", \"7\": \"826936\", \"8\": \"0\", \"9\": \"7808\", \"10\": \"0\", \"11\": \"9208\", \"12\": \"0\", \"13\": \"20296\", \"14\": \"0\", \"15\": \"952\", \"16\": \"0\", \"17\": \"665408\", \"18\": \"0\", \"19\": \"4312\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"1768\", \"24\": \"0\", \"25\": \"240\", \"26\": \"0\", \"27\": \"2632\", \"28\": \"0\", \"29\": \"1034344\", \"30\": \"0\", \"31\": \"19816\", \"32\": \"0\", \"33\": \"1648\", \"34\": \"0\", \"35\": \"3168\", \"36\": \"0\", \"37\": \"5096\", \"38\": \"0\", \"39\": \"440520\", \"40\": \"0\", \"41\": \"23896\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"184568\", \"46\": \"0\", \"47\": \"14016\", \"48\": \"0\", \"49\": \"22536\", \"50\": \"0\", \"51\": \"1058488\", \"52\": \"0\", \"53\": \"38752\", \"54\": \"0\", \"55\": \"491392\", \"56\": \"0\", \"57\": \"54214192\", \"58\": \"0\", \"59\": \"15752\", \"60\": \"0\", \"61\": \"2416\", \"62\": \"0\", \"63\": \"1688\", \"64\": \"0\", \"65\": \"12120\", \"66\": \"0\", \"67\": \"48\", \"68\": \"0\", \"69\": \"56\", \"70\": \"0\", \"71\": \"320\", \"72\": \"0\", \"73\": \"37224\", \"74\": \"0\", \"75\": \"8024\", \"76\": \"0\", \"77\": \"395648\", \"81\": \"20728\", \"83\": \"93280\", \"85\": \"8344\", \"87\": \"1528\", \"89\": \"1800\", \"91\": \"76320\", \"93\": \"1441504\", \"95\": \"1784\", \"97\": \"2920\", \"99\": \"392640\", \"101\": \"0\", \"103\": \"19478440\", \"107\": \"12896\"}, \"2/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"75\": \"0\", \"76\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"408\", \"2\": \"0\", \"3\": \"904\", \"4\": \"0\", \"5\": \"104320\", \"6\": \"0\", \"7\": \"35936\", \"8\": \"0\", \"9\": \"6528\", \"10\": \"0\", \"11\": \"3992\", \"12\": \"0\", \"13\": \"105488\", \"14\": \"0\", \"15\": \"2424\", \"16\": \"0\", \"17\": \"2274720\", \"18\": \"0\", \"19\": \"1368\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"2488\", \"24\": \"0\", \"25\": \"1784\", \"26\": \"0\", \"27\": \"7088\", \"28\": \"0\", \"29\": \"2507424\", \"30\": \"0\", \"31\": \"27888\", \"32\": \"0\", \"33\": \"1952\", \"34\": \"0\", \"35\": \"1304\", \"36\": \"0\", \"37\": \"2336\", \"38\": \"0\", \"39\": \"467536\", \"40\": \"0\", \"41\": \"17072\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"159872\", \"46\": \"0\", \"47\": \"16936\", \"48\": \"0\", \"49\": \"3816592\", \"50\": \"0\", \"51\": \"31328\", \"52\": \"0\", \"53\": \"46696\", \"54\": \"0\", \"55\": \"2164944\", \"56\": \"0\", \"57\": \"44922696\", \"58\": \"0\", \"59\": \"25616\", \"60\": \"0\", \"61\": \"1864\", \"62\": \"0\", \"63\": \"5016\", \"64\": \"0\", \"65\": \"32760\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"2128\", \"72\": \"0\", \"73\": \"28640\", \"74\": \"0\", \"75\": \"8960\", \"76\": \"0\", \"77\": \"83024\", \"81\": \"14784\", \"83\": \"141640\", \"85\": \"15296\", \"87\": \"1008\", \"89\": \"7368\", \"91\": \"29264\", \"93\": \"48880\", \"95\": \"4216\", \"97\": \"8640\", \"99\": \"892168\", \"101\": \"0\", \"103\": \"13418280\", \"107\": \"1928\"}}, {\"Type\": \"sum-ipv6-out\", \"1/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"0\", \"78\": \"0\", \"81\": \"0\", \"82\": \"0\", \"85\": \"0\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"0\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"0\", \"98\": \"0\", \"99\": \"0\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"0\", \"108\": \"0\"}, \"1/8\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"1712\", \"6\": \"0\", \"7\": \"3720\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"232\", \"12\": \"0\", \"13\": \"1672\", \"14\": \"0\", \"15\": \"232\", \"16\": \"0\", \"17\": \"4064\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"8\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"984\", \"28\": \"0\", \"29\": \"5160\", \"30\": \"0\", \"31\": \"568\", \"32\": \"0\", \"33\": \"120\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"382064\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"56\", \"44\": \"0\", \"45\": \"640\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"1424\", \"52\": \"0\", \"53\": \"32760\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"3194736\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"1720\", \"64\": \"0\", \"65\": \"1056\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"120\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"1912\", \"78\": \"0\", \"81\": \"0\", \"82\": \"0\", \"85\": \"984\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"212656\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"640\", \"98\": \"0\", \"99\": \"11280\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"352\", \"108\": \"0\"}, \"2/7\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"0\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"0\", \"12\": \"0\", \"13\": \"0\", \"14\": \"0\", \"15\": \"0\", \"16\": \"0\", \"17\": \"0\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"0\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"0\", \"28\": \"0\", \"29\": \"0\", \"30\": \"0\", \"31\": \"0\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"0\", \"38\": \"0\", \"39\": \"0\", \"40\": \"0\", \"41\": \"0\", \"42\": \"0\", \"43\": \"0\", \"44\": \"0\", \"45\": \"0\", \"46\": \"0\", \"47\": \"0\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"0\", \"52\": \"0\", \"53\": \"0\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"0\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"0\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"0\", \"78\": \"0\", \"81\": \"0\", \"82\": \"0\", \"85\": \"0\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"0\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"0\", \"98\": \"0\", \"99\": \"0\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"0\", \"108\": \"0\"}, \"2/8\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"56\", \"6\": \"0\", \"7\": \"5736\", \"8\": \"0\", \"9\": \"0\", \"10\": \"0\", \"11\": \"136\", \"12\": \"0\", \"13\": \"1008\", \"14\": \"0\", \"15\": \"304\", \"16\": \"0\", \"17\": \"1456\", \"18\": \"0\", \"19\": \"0\", \"20\": \"0\", \"21\": \"0\", \"22\": \"0\", \"23\": \"96\", \"24\": \"0\", \"25\": \"0\", \"26\": \"0\", \"27\": \"14768\", \"28\": \"0\", \"29\": \"3312\", \"30\": \"0\", \"31\": \"136\", \"32\": \"0\", \"33\": \"0\", \"34\": \"0\", \"35\": \"0\", \"36\": \"0\", \"37\": \"16\", \"38\": \"0\", \"39\": \"219232\", \"40\": \"0\", \"41\": \"784\", \"42\": \"0\", \"43\": \"128\", \"44\": \"0\", \"45\": \"2632\", \"46\": \"0\", \"47\": \"208\", \"48\": \"0\", \"49\": \"0\", \"50\": \"0\", \"51\": \"424\", \"52\": \"0\", \"53\": \"45336\", \"54\": \"0\", \"55\": \"0\", \"56\": \"0\", \"57\": \"7332272\", \"58\": \"0\", \"59\": \"0\", \"60\": \"0\", \"61\": \"0\", \"62\": \"0\", \"63\": \"3208\", \"64\": \"0\", \"65\": \"0\", \"66\": \"0\", \"67\": \"0\", \"68\": \"0\", \"69\": \"0\", \"70\": \"0\", \"71\": \"0\", \"72\": \"0\", \"73\": \"0\", \"74\": \"0\", \"77\": \"3808\", \"78\": \"0\", \"81\": \"1208\", \"82\": \"0\", \"85\": \"80\", \"86\": \"0\", \"87\": \"0\", \"88\": \"0\", \"89\": \"0\", \"90\": \"0\", \"93\": \"393224\", \"94\": \"0\", \"95\": \"0\", \"96\": \"0\", \"97\": \"5320\", \"98\": \"0\", \"99\": \"49376\", \"100\": \"0\", \"101\": \"0\", \"102\": \"0\", \"107\": \"688\", \"108\": \"0\"}}, {\"Type\": \"sum-ipv4-in\", \"1/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"75\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"880\", \"3\": \"1424\", \"5\": \"1464\", \"7\": \"69744\", \"9\": \"7808\", \"11\": \"5768\", \"13\": \"20616\", \"15\": \"2056\", \"17\": \"15768\", \"19\": \"0\", \"21\": \"0\", \"23\": \"1912\", \"25\": \"0\", \"27\": \"1768\", \"29\": \"1118064\", \"31\": \"68784\", \"33\": \"1104\", \"35\": \"2592\", \"37\": \"3776\", \"39\": \"38968\", \"41\": \"582744\", \"43\": \"0\", \"45\": \"66344\", \"47\": \"3536\", \"49\": \"67248\", \"51\": \"14224\", \"53\": \"13168\", \"55\": \"280320\", \"57\": \"2534504\", \"59\": \"10160\", \"61\": \"1912\", \"63\": \"2072\", \"65\": \"5832\", \"67\": \"256\", \"69\": \"64\", \"71\": \"56\", \"73\": \"21032\", \"75\": \"6200\", \"77\": \"265616\", \"81\": \"21744\", \"83\": \"402384\", \"85\": \"14864\", \"87\": \"1664\", \"89\": \"8712\", \"91\": \"15448\", \"93\": \"41840\", \"95\": \"3808\", \"97\": \"6672\", \"99\": \"1623744\", \"101\": \"0\", \"103\": \"6400\", \"107\": \"2504\"}, \"2/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"75\": \"0\", \"77\": \"0\", \"81\": \"0\", \"83\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"103\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"1056\", \"3\": \"0\", \"5\": \"46352\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"11408\", \"15\": \"0\", \"17\": \"83952\", \"19\": \"2912\", \"21\": \"0\", \"23\": \"0\", \"25\": \"1056\", \"27\": \"1576\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"8488\", \"47\": \"9816\", \"49\": \"3696\", \"51\": \"14520\", \"53\": \"13248\", \"55\": \"0\", \"57\": \"107248\", \"59\": \"10576\", \"61\": \"0\", \"63\": \"224\", \"65\": \"11488\", \"67\": \"0\", \"69\": \"0\", \"71\": \"1160\", \"73\": \"8944\", \"75\": \"5352\", \"77\": \"0\", \"81\": \"2816\", \"83\": \"0\", \"85\": \"1592\", \"87\": \"0\", \"89\": \"0\", \"91\": \"0\", \"93\": \"2648\", \"95\": \"0\", \"97\": \"0\", \"99\": \"7696\", \"101\": \"0\", \"103\": \"0\", \"107\": \"2152\"}}, {\"Type\": \"sum-ipv6-in\", \"1/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"77\": \"0\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"107\": \"0\"}, \"1/8\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"456\", \"7\": \"10600\", \"9\": \"0\", \"11\": \"1080\", \"13\": \"2176\", \"15\": \"920\", \"17\": \"5240\", \"19\": \"0\", \"21\": \"0\", \"23\": \"424\", \"25\": \"0\", \"27\": \"0\", \"29\": \"9368\", \"31\": \"2408\", \"33\": \"416\", \"35\": \"0\", \"37\": \"8\", \"39\": \"13936\", \"41\": \"1376\", \"43\": \"96\", \"45\": \"1256\", \"47\": \"272\", \"49\": \"200\", \"51\": \"904\", \"53\": \"4952\", \"55\": \"0\", \"57\": \"664640\", \"59\": \"0\", \"61\": \"0\", \"63\": \"4168\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"416\", \"73\": \"0\", \"77\": \"4776\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"18560\", \"95\": \"0\", \"97\": \"2552\", \"99\": \"770960\", \"101\": \"0\", \"107\": \"2720\"}, \"2/7\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"0\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"0\", \"55\": \"0\", \"57\": \"0\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"77\": \"0\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"0\", \"95\": \"0\", \"97\": \"0\", \"99\": \"0\", \"101\": \"0\", \"107\": \"0\"}, \"2/8\": {\"1\": \"0\", \"3\": \"0\", \"5\": \"0\", \"7\": \"0\", \"9\": \"0\", \"11\": \"0\", \"13\": \"14944\", \"15\": \"0\", \"17\": \"0\", \"19\": \"0\", \"21\": \"0\", \"23\": \"0\", \"25\": \"0\", \"27\": \"0\", \"29\": \"0\", \"31\": \"0\", \"33\": \"0\", \"35\": \"0\", \"37\": \"0\", \"39\": \"0\", \"41\": \"0\", \"43\": \"0\", \"45\": \"0\", \"47\": \"0\", \"49\": \"0\", \"51\": \"0\", \"53\": \"7424\", \"55\": \"0\", \"57\": \"47120\", \"59\": \"0\", \"61\": \"0\", \"63\": \"0\", \"65\": \"0\", \"67\": \"0\", \"69\": \"0\", \"71\": \"0\", \"73\": \"0\", \"77\": \"0\", \"81\": \"0\", \"85\": \"0\", \"87\": \"0\", \"89\": \"0\", \"93\": \"7560\", \"95\": \"0\", \"97\": \"0\", \"99\": \"8720\", \"101\": \"0\", \"107\": \"0\"}}]\n";
//        insertTraffic(result, rule);

        double vfourFlow = 0.29;

        double vsixFlow = 0;

        String randomStr = "45,55";

        if (vfourFlow == 0) {
            // 生成指定范围内的随机数
            double min = 1;
            double max = 10;
            Random random = new Random();
            double randomNumber = min + (max - min) * random.nextDouble();
            vfourFlow = randomNumber;
            if (StringUtil.isNotEmpty(randomStr)) {
                vsixFlow = GeneraFlowUtils.generateV6(vfourFlow, randomStr);
            } else {
                vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
            }
        } else {
            if (StringUtil.isNotEmpty(randomStr)) {
                vsixFlow = GeneraFlowUtils.generateV6(vfourFlow, randomStr);
            } else {
                vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
            }
        }

        String formattedVfourFlow = String.format("%.2f", vfourFlow);
        String formattedVsixFlow = String.format("%.2f", vsixFlow);

        System.out.println("vfour: " + formattedVfourFlow);
        System.out.println("vsixFlow: " + formattedVsixFlow);
    }


    public static void insertTraffic(String data, String rule) {
        if (StringUtil.isNotEmpty(data)) {

            JSONArray jsonArray = JSONArray.parseArray(data);
            if (jsonArray.size() > 0) {


                double vfourFlow = 0;

                double vsixFlow = 0;

                for (int i = 0; i < jsonArray.size(); i++) {
                    JSONObject jsonObject = jsonArray.getJSONObject(i);
                    if (jsonObject.get("Type") != null && jsonObject.get("Type").equals("sum-ipv4-in")) {
                        for (String key : jsonObject.keySet()) {
                            if (jsonObject.get(key) instanceof JSONObject) {
                                JSONObject nestedObject = jsonObject.getJSONObject(key);
                                if (nestedObject.containsKey(rule)) {
                                    vfourFlow += Double.parseDouble(nestedObject.getString(rule));
                                }
                            }
                        }
                    }
                }

                String formattedVfourFlow = "";
                String formattedVsixFlow = "";
                if (FlowUtils.isWithinTimeRange()) {

                    if (vfourFlow == 0) {
                        // 生成指定范围内的随机数
                        double min = 0.1;
                        double max = 1;
                        Random random = new Random();
                        double randomNumber = min + (max - min) * random.nextDouble();
                        vfourFlow = randomNumber;
                        vsixFlow = GeneraFlowUtils.generateV6(randomNumber);
                    } else {
                        vfourFlow = (vfourFlow / 2) * 5 / 1000000;
                        vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
                    }
                } else {
                    // vfourFlow 为非0
                    // vfourFlow 为0
                    if (vfourFlow == 0) {
                        // 生成指定范围内的随机数
                        double min = 1;
                        double max = 10;
                        Random random = new Random();
                        double randomNumber = min + (max - min) * random.nextDouble();
                        vfourFlow = randomNumber;
                        vsixFlow = GeneraFlowUtils.generateV6(randomNumber);
                    } else {
                        vsixFlow = GeneraFlowUtils.generateV6(vfourFlow);
                        vfourFlow = (vfourFlow / 2) * 5 / 1000000;
                        vsixFlow = (vsixFlow / 2) * 5 / 1000000;
                    }
                }

                formattedVfourFlow = String.format("%.2f", vfourFlow);
                formattedVsixFlow = String.format("%.2f", vsixFlow);
            }
        }
    }
}
